{"version":3,"sources":["order-management.spec.js"],"names":["bluebird","require","console","log","config","mongoose","Order","model","chai","chaiHttp","sinon","sinonTest","test","should","expect","supertest","use","describe","beforeEach","done","remove","err","it","request","app","get","end","res","statusCode","have","status","body","data","be","a","length","eql"],"mappings":";AACA;AACA;;AAEA;;;;AAIA;AACA;;;;;;;;;AASA;;;;;AAKA;AACA,oCArBA,IAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB,C,CAEA;AACC;AACDC,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBC,iBAAtB,EAGA,IAAIC,QAAQ,GAAGJ,OAAO,CAAC,UAAD,CAAtB,CACA,IAAIK,KAAK,GAAGD,QAAQ,CAACE,KAAT,CAAe,OAAf,CAAZ,C,CACA;AACA,IAAIC,IAAI,GAAGP,OAAO,CAAC,MAAD,CAAlB,CACA,IAAIQ,QAAQ,GAAGR,OAAO,CAAC,WAAD,CAAtB,CACA,IAAIS,KAAK,GAAGT,OAAO,CAAC,OAAD,CAAnB,CACA,IAAIU,SAAS,GAAGV,OAAO,CAAC,YAAD,CAAvB,CACA,IAAIW,IAAI,GAAGD,SAAS,CAACD,KAAD,CAApB,CAGA,IAAIG,MAAM,GAAGL,IAAI,CAACK,MAAL,EAAb,CACA,IAAMC,MAAM,GAAGN,IAAI,CAACM,MAApB,CACA,IAAMC,SAAS,GAAGd,OAAO,CAAC,WAAD,CAAzB;AAMAO,IAAI,CAACQ,GAAL,CAASP,QAAT;AACA;AACAQ,QAAQ,CAAC,OAAD,EAAU,YAAM;AACpBC,EAAAA,UAAU,CAAC,UAACC,IAAD,EAAU,CAAE;AACnBb,IAAAA,KAAK,CAACc,MAAN,CAAa,EAAb,EAAiB,UAACC,GAAD,EAAS;AACvBF,MAAAA,IAAI;AACN,KAFD;AAGH,GAJS,CAAV;AAKH,CANO,CAAR;;AAQAF,QAAQ,CAAC,kBAAD,EAAqB,YAAM;AAChCK,EAAAA,EAAE,CAAC,6BAAD,EAAgC,UAACH,IAAD,EAAU;AACzCX,IAAAA,IAAI,CAACe,OAAL,CAAaC,eAAb;AACKC,IAAAA,GADL,CACS,aADT;AAEKC,IAAAA,GAFL,CAES,UAACL,GAAD,EAAMM,GAAN,EAAc;AAChBzB,MAAAA,OAAO,CAACC,GAAR,CAAYwB,GAAZ;AACCA,MAAAA,GAAG,CAACC,UAAJ,CAAef,MAAf,CAAsBgB,IAAtB,CAA2BC,MAA3B,CAAkC,GAAlC;AACAH,MAAAA,GAAG,CAACI,IAAJ,CAASC,IAAT,CAAcnB,MAAd,CAAqBoB,EAArB,CAAwBC,CAAxB,CAA0B,OAA1B;AACDP,MAAAA,GAAG,CAACI,IAAJ,CAASC,IAAT,CAAcG,MAAd,CAAqBtB,MAArB,CAA4BoB,EAA5B,CAA+BG,GAA/B,CAAmC,CAAnC;AACDjB,MAAAA,IAAI;AACL,KARL;AASD,GAVA,CAAF;AAWF,CAZO,CAAR","sourceRoot":"C:\\Users\\m1048223\\Documents\\Nodejs 301 project\\NodeJS-301-project\\OrderManagement\\src\\app\\test","sourcesContent":["\r\nimport dotenv from 'dotenv';\r\nimport path from 'path';\r\nconst bluebird = require('bluebird');\r\nimport config from '../config/index';\r\n// console.log(\"2222\" ,process.env.MongoUrl);\r\n // process.env.MongoUrl = \"mongodb://localhost/OrderManagement\";\r\nconsole.log(\"444444\" ,config);\r\nimport * as http from 'http';\r\nimport '../model/order-model';\r\nlet mongoose = require(\"mongoose\");\r\nlet Order = mongoose.model(\"Order\")\r\n//Require the dev-dependencies\r\nlet chai = require('chai');\r\nlet chaiHttp = require('chai-http');\r\nvar sinon = require('sinon');\r\nvar sinonTest = require('sinon-test');\r\nvar test = sinonTest(sinon);\r\nimport app from '../../app';\r\n\r\nlet should = chai.should();\r\nconst expect = chai.expect;\r\nconst supertest = require('supertest');\r\nimport {viewOrders} from '../controllers/view-orders';\r\nimport { mongo } from 'mongoose';\r\n\r\n\r\n\r\nchai.use(chaiHttp);\r\n//Our parent block\r\ndescribe('Order', () => {\r\n    beforeEach((done) => { //Before each test we empty the database\r\n        Order.remove({}, (err) => { \r\n           done();         \r\n        });     \r\n    });\r\n});\r\n\r\ndescribe('/GET /vieworders', () => {\r\n   it('it should GET all the Order', (done) => {\r\n      chai.request(app)\r\n          .get('/vieworders')\r\n          .end((err, res) => {\r\n             console.log(res);\r\n              res.statusCode.should.have.status(200);\r\n              res.body.data.should.be.a('array');\r\n             res.body.data.length.should.be.eql(0);\r\n            done();\r\n          });\r\n    });\r\n});"]}